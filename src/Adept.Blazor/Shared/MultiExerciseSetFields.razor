@if (WorkoutTemplateExercise.MultiExerciseSets.Any())
{
    <MudTabs Elevation="4" Rounded="true" AlwaysShowScrollButtons="true" Color="@Color.Primary" Class="mt-4">
        @foreach (var multiExerciseSet in WorkoutTemplateExercise.MultiExerciseSets.OrderBy(x => x.Order))
        {
            <MudTabPanel  Text="@multiExerciseSet.Name">
                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => AddExerciseSet(multiExerciseSet))">Add Exercise Set</MudButton>
                <MudExpansionPanels MultiExpansion="true">
                    @foreach (var exerciseSet in multiExerciseSet.ExerciseSets.OrderBy(x => x.Order))
                    {
                        <MudExpansionPanel Text="@exerciseSet.Name">
                            <ExerciseAutocomplete Exercise="@exerciseSet.Exercise"></ExerciseAutocomplete>
                            <MudNumericField @bind-Value="@exerciseSet.Order" Label="Order"/>
                            <MudNumericField @bind-Value="@exerciseSet.Repetition" Label="Reps"/>
                            <MudNumericField @bind-Value="@exerciseSet.Weight" Label="Weight"/>
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => DeleteExerciseSet(multiExerciseSet, exerciseSet))">Delete Exercise Set</MudButton>
                        </MudExpansionPanel>
                    }
                </MudExpansionPanels>
                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => DeleteMultiExerciseSet(multiExerciseSet))">Delete Multi Exercise Set</MudButton>

            </MudTabPanel>
        }
    </MudTabs>
}
@code {
    [Parameter]
    public WorkoutTemplateExercise WorkoutTemplateExercise { get; set; }

    private void AddExerciseSet(WorkoutTemplateMultiExerciseSet multiExerciseSet)
    {
        var setOrder = multiExerciseSet.GetNextExerciseSetOrder();
        multiExerciseSet.ExerciseSets.Add(new WorkoutTemplateExerciseSet(setOrder));
    }

    private void DeleteExerciseSet(WorkoutTemplateMultiExerciseSet multiExerciseSet, WorkoutTemplateExerciseSet exerciseSet)
    {
        multiExerciseSet.ExerciseSets.Remove(exerciseSet);
    }

    private void DeleteMultiExerciseSet(WorkoutTemplateMultiExerciseSet multiExerciseSet)
    {
        WorkoutTemplateExercise.MultiExerciseSets.Remove(multiExerciseSet);
    }
}
