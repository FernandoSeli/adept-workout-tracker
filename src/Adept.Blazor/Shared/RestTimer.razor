
<MudTextField @bind-Value="_seconds"  Variant="Variant.Text" Adornment="Adornment.End" AdornmentText="Seconds" />
@if(_isTimerDone)
{
    <MudText>@_displayText</MudText>
}
else
{
    <MudText>maybe add a progress bar or spinner here?</MudText>
    <MudText>@_timerValue</MudText>
}
 <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
    <MudButton OnClick="(async () => {StartTimerAsync();})">Start</MudButton>
    <MudButton OnClick="(async () => {TimerAsync();})">Resume</MudButton>
    <MudButton OnClick="(() =>{_isTimerPaused = true;})">Pause</MudButton>
</MudButtonGroup>
@code {
    TimeSpan _timeLeft = new TimeSpan();
    string _timerValue => _timeLeft.ToString("mm':'ss':'f");
    string _displayText = "Timer is done";
    bool _isTimerDone => _timeLeft == new TimeSpan();
    bool _isTimerPaused;
    int _seconds;
    async Task StartTimerAsync()
    {
        _timeLeft =new TimeSpan(0, 0, _seconds);
        await TimerAsync();
    }

    async Task TimerAsync()
    {
        _isTimerPaused = false;
        var timeSpan =  new TimeSpan();
        while(!_isTimerPaused && _timeLeft > timeSpan)
        {
            await Task.Delay(100);
            _timeLeft = _timeLeft.Subtract(new TimeSpan(0, 0, 0, 0, 100));
            StateHasChanged();
        }
    }
}
